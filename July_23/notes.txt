Abstract Class : A class, that which can be created, but not implemented and instantiated known as abstract class. Abstract class contains abstract and non-abstract method(s), only abstract methods needs to be overrided mandatorily by the derived class. 

abstract class class_name
{
     abstract method1();
     abstract method2();
}

We cannot create an object to abstract class. 

There are 2 types of relationships in oops as 

IS-A relation : It is also known as inheritance relationship, represents a type of relationship between two classes where one class is specialized version of another. It implies that a subclass is a specific type of its super class. 

Pros of IS-A relationship : 
___________________________

	-> Code Reusability : Allows subclasses to inherit properties and behaviours 

	-> Polymorphism : It implements Runtime polymorphism.

	-> Method Overriding : Subclasses can override methods inherited from the superclass to provide their own implementation.

HAS-A relation

________________________________________________________________________________________________________________

Interfaces : Java does not support the concept of multiple inheritance, to achieve this we need the help of interfaces. An interface contains method declaration, and the implementation can be done in the corresponding class, you can add more than one interface to the particular class. 

Difference between interface and abstract class : 
___________________________________________________

(I) An abstract class contains abstract and non-abstract method(s) where interface contains only abstract methods. 

(ii) Interface methods are public and abstract by default. 

(iii) Multiple Inheritance can be achieved by using interfaces

(iv) An interface can be called from anywhere to anywhere. 



Object Oriented Programming :  It is an approach that provides a way of modularizing programming, that which can be used to create small partition
memory area for both data and objects, which are to be used as templates for creating copies of such modules on demand. 


Object : An object is a real world entity, that which possess 3 characterstics known as

	(i) State

	(ii) Behaviour

	(iii) Identity 

Object Oriented Programming Features : 
_______________________________________

	(i) Encapsulation : Wrapping up of data and functions into a single unit known as encapsulation.

	(ii) Abstraction : Hiding the irrelevant details of an object, that do not contribute to its essential characterstics known as abstraction. 

		*** Encapsulation focuses on showing the relevant details, where abstraction focuses on hiding the irrelevant details ***

	(iii) Inheritance : Deriving a new entity from already existing entity known as inheritance, through inheritance we can reduce the size of the 					program.

	 (iv) Polymorphism : The ability to take more than one form known as polymorphism. 


class : A class is a template/blueprint, that which contains combination of data members and member functions.  Members of the class can be accessable by using instance of the class. 

class class_name
{
     data members;
     member functions;
}


Why Java : 
___________

1) Platform Independence : write once and run anywhere. 

2) Console Applications

3) Windows Applications

4) Web applications

5) Service Oriented/Mobile Apps

6) Packages : Contains group of related classes and interfaces that which belongs to one common group. If you want to overcome the naming conflicts between classes then we need the help of packages. 


Java Features : 
________________


1) Simple : Java uses simple C/C++ syntaxes, as a programmer no needs to take care of internal details like memory management etc...as how much memory allocated to run the program, the same amount of memory will be reallocated automatically.

2) Object Oriented : Java supports all object oriented programming features. 

3) Compiled and Interpreted : Java programs are compiled first, during compilation java code will be converted into bytecode, the .class file will be created. In interpretation, it reads the bytecode line by line and executes.

4) Portable : Ability to run the program without changing the source code, java programs are programs, that can run on any env. without changing the source code. 

5) Securable :  Java implements various levels of security as 

		(i) Compiler Level Security

		(ii) Bytecode Level Security

		(iii) Class Loader Level Security 

6) Distributed : By using java, we can implement all distributed and robust applications. 

Java Architecture : 
__________________

(i) Java Program : Java code that which stored with extension .java

(ii) Java Class : Java code after compilation its converted into bytecode, then .class file will be created. 

(iii) JVM (Java Virtual Machine) : It contains various components as


	(a) Class Loader : Used to load all classes which are required to run the program. There are 2 types of classes known as

			(i) Primordial Class Loader : Used to load all system classes which reqd to run the program.

			(ii) Class Loader Objects : Used to load all custom classes which reqd to run the program. 

	(b) JIT Compiler : (Just-In Time) : Converts bytecode into CPU specific format. 

	(c) Execution Manager : Contains QUEUE of programs which are ready to run, where we can execute the program.  Before execution it needs to undergone 					security authentication. 

(iv) Java API : It provides runtime env. that which allows you to run the java program.  

Access Modifiers : 
___________________


	  (i) private : Allows you to access members within current class. 

	 (ii) public  : Allows you to access members in entire application.

	(iii) protected : Allows you to access members within current/derived classes.

	 (iv) friendly : By default java possess friendly access modifier, allows you to access members within all classes of current package. 



Data Types : There are various types of data types known as 


	(i) Value Types : int, float, double, char, Boolean etc...

	(ii) reference types : String, Object and User-defined types. 

*** Value types will be stored in STACK memory, and reference types will be stored in HEAP memory ***

You can define method main() in java, as 

public static void main(String[] args) {
	...
	...
	...
}


System.out.println() : Used to display any value or message. 

System -> class
out -> Console
println() -> Method. 


System.out.println("Welcome to Java Programming...");














































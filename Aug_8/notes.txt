Files : 
________

	A file is a collection of data, that which allows you to store the output permanently.  
To deal with files, we need the help of java.io package. 

Syntax : 

File obj = new File(filename);

getPath()

getName()

getParent()

FileReader : This class allows you to read the data from the file w.r.t. Unicode format.

Only text information only we can read from this.

read() -> Used to read data char/char and returns ascii value.  It returns -1 once it reaches the end of file. 

FileReader fr = new FileReader(filename);

FileWriter : Allows you to write data into the file. 

FileWriter fw = new FileWriter(filename);

write() : used to write data into the file. 


FileOutputStream : Used to write data w.r.t. Stream of bytes. 

FileOutputStream fout = new FileOutputStream(target_name);


FileINputStream : used to read data w.r.t. Stream of bytes. 

read() -> used to read data char/char and returns ascii value, it returns -1
once it reaches the end of file. 

DataOutputStream : Used to write primitive types into the file. 

DataOutputStream obj = new DataOutputStream(filename);

writeInt()
writeDouble()
writeUTF()
writeBoolean()

DataInputStream


BufferedReader : Allows you to read data from the keyboard.

BufferedReader br = new BufferedReader(new InputStreamReader(System.in));

readLine() : Used to read one line of text. 


ObjectOutputStream : used to write object into the file. 

writeObject()

ObjectInputStream : used to read objects from the file. 

readObject()

Serilization : Used to write Custom Objects into the file. 

any class objects to be written to file, that class must be implemented with

Serilizable interface. 









